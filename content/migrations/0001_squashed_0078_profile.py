# Generated by Django 2.0.1 on 2018-02-26 13:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import filebrowser.fields
import tinymce.models


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# content.migrations.0077_auto_20180219_0914

class Migration(migrations.Migration):

    replaces = [('content', '0001_initial'), ('content', '0002_talk'), ('content', '0003_auto_20180111_1436'), ('content', '0004_module_image_position'), ('content', '0005_auto_20180111_1536'), ('content', '0006_auto_20180111_1548'), ('content', '0007_auto_20180111_1658'), ('content', '0008_auto_20180111_1824'), ('content', '0009_auto_20180111_1829'), ('content', '0010_auto_20180111_1902'), ('content', '0011_auto_20180111_1907'), ('content', '0012_imagegallery_imageingallery'), ('content', '0013_auto_20180111_1923'), ('content', '0014_auto_20180112_1418'), ('content', '0015_auto_20180112_1541'), ('content', '0016_style'), ('content', '0017_auto_20180112_1603'), ('content', '0018_auto_20180112_1606'), ('content', '0019_auto_20180112_1609'), ('content', '0020_auto_20180112_1614'), ('content', '0021_module_content'), ('content', '0022_listitem'), ('content', '0023_auto_20180112_1723'), ('content', '0024_auto_20180115_1348'), ('content', '0025_auto_20180116_1540'), ('content', '0026_auto_20180116_1554'), ('content', '0027_auto_20180116_1633'), ('content', '0028_auto_20180116_1633'), ('content', '0029_module_content_width'), ('content', '0030_auto_20180116_1759'), ('content', '0031_remove_block_display_list'), ('content', '0032_auto_20180117_1328'), ('content', '0033_listitem_style'), ('content', '0034_auto_20180117_1348'), ('content', '0035_auto_20180117_1350'), ('content', '0036_auto_20180117_1353'), ('content', '0037_auto_20180117_1353'), ('content', '0038_auto_20180117_1439'), ('content', '0039_auto_20180117_1439'), ('content', '0040_auto_20180117_1501'), ('content', '0041_button'), ('content', '0042_buttoninmodule'), ('content', '0043_auto_20180117_1640'), ('content', '0044_auto_20180117_1642'), ('content', '0045_auto_20180117_1642'), ('content', '0046_auto_20180119_1514'), ('content', '0047_imageingallery_link'), ('content', '0048_auto_20180119_1821'), ('content', '0049_block_content_justify'), ('content', '0050_remove_page_content'), ('content', '0051_auto_20180122_1548'), ('content', '0052_auto_20180122_1554'), ('content', '0053_auto_20180122_1618'), ('content', '0054_auto_20180122_1619'), ('content', '0055_auto_20180122_1843'), ('content', '0056_auto_20180130_1538'), ('content', '0057_auto_20180130_1539'), ('content', '0058_auto_20180130_1543'), ('content', '0059_auto_20180130_1551'), ('content', '0060_talk_slug'), ('content', '0061_auto_20180130_1612'), ('content', '0062_auto_20180130_1615'), ('content', '0063_auto_20180130_1821'), ('content', '0064_auto_20180130_1829'), ('content', '0065_auto_20180130_1839'), ('content', '0066_auto_20180130_1903'), ('content', '0067_auto_20180131_1459'), ('content', '0068_auto_20180131_1503'), ('content', '0069_auto_20180201_1819'), ('content', '0070_auto_20180201_1907'), ('content', '0071_videogallery_videos_per_row'), ('content', '0072_auto_20180206_1503'), ('content', '0073_auto_20180209_1516'), ('content', '0074_auto_20180215_1437'), ('content', '0075_auto_20180215_1444'), ('content', '0076_auto_20180215_1455'), ('content', '0077_auto_20180219_0914'), ('content', '0078_profile')]

    initial = True

    dependencies = [
        ('events', '0008_auto_20180215_1701'),
        ('events', '0006_event_logo'),
        ('events', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='events.Event')),
                ('public', models.BooleanField(default=True, help_text='If unchecked, only logged-in users can see this page')),
            ],
        ),
        migrations.CreateModel(
            name='Sponsorship',
            fields=[
                ('module_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='content.Module')),
                ('subtitle', models.CharField(blank=True, max_length=50)),
                ('price', models.FloatField()),
            ],
            bases=('content.module',),
        ),
        migrations.AddField(
            model_name='module',
            name='page',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modulos', to='content.Page'),
        ),
        migrations.CreateModel(
            name='Talk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('content', models.TextField()),
                ('language', models.CharField(max_length=20)),
                ('room', models.CharField(max_length=30)),
                ('translation', models.BooleanField(default=False)),
                ('photo', models.ImageField(blank=True, upload_to='')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('bio', tinymce.models.HTMLField(blank=True, max_length=65535)),
                ('workplace', models.CharField(blank=True, max_length=50)),
                ('event', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='speakers', to='events.Event')),
            ],
        ),
        migrations.AddField(
            model_name='talk',
            name='speakers',
            field=models.ManyToManyField(related_name='talks', to='content.Speaker'),
        ),
        migrations.AddField(
            model_name='module',
            name='image_position',
            field=models.CharField(choices=[('LEFT', 'Left'), ('RIGHT', 'Right')], default='LEFT', max_length=6),
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('module_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='content.Module')),
                ('kicker', models.CharField(blank=True, max_length=50)),
                ('list_title', models.CharField(blank=True, max_length=50)),
                ('layout', models.CharField(choices=[('ONECOL', '□ One column'), ('TWOCOL', '◫ Two columns')], default='ONECOL', max_length=6)),
                ('list_style', models.CharField(choices=[('NONE', 'None'), ('VERTICALSEP', 'Vertical separators'), ('HORIZONTALSEP', 'Horizontal separator on top'), ('VERTICALHORIZONTAL', 'Vertical + horizontal separator')], default='None', max_length=20)),
                ('content_justify', models.CharField(choices=[('LEFT', '⯇ Left'), ('CENTER', '￭ Center'), ('RIGHT', '⯈ Right')], default='LEFT', max_length=6, verbose_name='Content align')),
            ],
            bases=('content.module',),
        ),
        migrations.AlterField(
            model_name='module',
            name='title',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='talk',
            name='title',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterModelOptions(
            name='module',
            options={'ordering': ('order',)},
        ),
        migrations.AddField(
            model_name='module',
            name='order',
            field=models.PositiveIntegerField(default=0, verbose_name='Order'),
        ),
        migrations.AlterField(
            model_name='module',
            name='page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modules', to='content.Page'),
        ),
        migrations.AlterField(
            model_name='module',
            name='content',
            field=tinymce.models.HTMLField(),
        ),
        migrations.AlterField(
            model_name='module',
            name='content',
            field=tinymce.models.HTMLField(max_length=65535),
        ),
        migrations.AddField(
            model_name='module',
            name='background_color',
            field=models.CharField(choices=[('BLACK', 'Black'), ('WHITE', 'White'), ('DARKGREY', 'Dark grey'), ('LIGHTGREY', 'Light grey'), ('RED', 'Red'), ('LIGHTBLUE', 'Light blue')], default='BLACK', max_length=9),
        ),
        migrations.AddField(
            model_name='module',
            name='font_color',
            field=models.CharField(choices=[('BLACK', 'Black'), ('WHITE', 'White')], default='WHITE', max_length=9),
        ),
        migrations.AlterField(
            model_name='module',
            name='page',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modules', to='content.Page'),
        ),
        migrations.CreateModel(
            name='ImageGallery',
            fields=[
                ('module_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='content.Module')),
            ],
            bases=('content.module',),
        ),
        migrations.CreateModel(
            name='ImageInGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', filebrowser.fields.FileBrowseField(blank=True, max_length=200, null=True)),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('imagegallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='content.ImageGallery')),
                ('caption', models.CharField(blank=True, max_length=50, null=True)),
                ('as_circle', models.BooleanField(default=False)),
                ('link', models.URLField(blank=True, null=True)),
                ('event', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='imageingallerys', to='events.Event')),
            ],
            options={
                'verbose_name_plural': 'Images in gallery',
                'ordering': ('order',),
            },
        ),
        migrations.AlterModelOptions(
            name='imagegallery',
            options={'verbose_name_plural': 'Image galleries'},
        ),
        migrations.CreateModel(
            name='ModuleInPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Module',
                'ordering': ['order'],
            },
        ),
        migrations.AlterModelOptions(
            name='module',
            options={},
        ),
        migrations.RemoveField(
            model_name='module',
            name='order',
        ),
        migrations.AddField(
            model_name='moduleinpage',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules_in_page', to='content.Module'),
        ),
        migrations.AddField(
            model_name='moduleinpage',
            name='page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules_in_page', to='content.Page'),
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('slug', models.SlugField()),
                ('event', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='styles', to='events.Event')),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.RemoveField(
            model_name='module',
            name='page',
        ),
        migrations.RemoveField(
            model_name='module',
            name='content',
        ),
        migrations.AlterField(
            model_name='module',
            name='title',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='module',
            name='display_title',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='module',
            name='title',
            field=models.CharField(max_length=50),
        ),
        migrations.RemoveField(
            model_name='module',
            name='background_color',
        ),
        migrations.RemoveField(
            model_name='module',
            name='font_color',
        ),
        migrations.AddField(
            model_name='module',
            name='image_on_background',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='module',
            name='style',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Style'),
        ),
        migrations.AddField(
            model_name='module',
            name='content',
            field=tinymce.models.HTMLField(blank=True, max_length=65535),
        ),
        migrations.CreateModel(
            name='Icon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('image', filebrowser.fields.FileBrowseField(blank=True, max_length=200, null=True)),
                ('event',
                 models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='icons',
                                   to='events.Event')),
            ],
        ),
        migrations.CreateModel(
            name='ListItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Icon')),
                ('caption', models.CharField(blank=True, max_length=200, null=True)),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='list_items', to='content.Module')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('event', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='listitems', to='events.Event')),
            ],
            options={
                'verbose_name_plural': 'List items',
                'ordering': ('order',),
            },
        ),
        migrations.AlterField(
            model_name='module',
            name='image',
            field=filebrowser.fields.FileBrowseField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='module',
            name='type',
            field=models.CharField(choices=[('BLOCK', 'Block'), ('SPONSOR', 'Sponsorship'), ('IMAGEGALLERY', 'Image gallery')], max_length=12, null=True),
        ),
        migrations.AddField(
            model_name='module',
            name='content_width',
            field=models.CharField(choices=[('WIDE', 'Wide'), ('SEMIWIDE', 'Semiwide'), ('NARROW', 'Narrow')], default='WIDE', max_length=8),
        ),
        migrations.RemoveField(
            model_name='talk',
            name='photo',
        ),
        migrations.AddField(
            model_name='talk',
            name='image',
            field=filebrowser.fields.FileBrowseField(blank=True, max_length=200, null=True),
        ),
        migrations.CreateModel(
            name='Button',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=40)),
                ('url', models.URLField()),
                ('event', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='buttons', to='events.Event')),
            ],
        ),
        migrations.CreateModel(
            name='ButtonInModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('button', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='content.Button')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buttons', to='content.Module')),
                ('event', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='buttoninmodules', to='events.Event')),
            ],
            options={
                'verbose_name': 'Module',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='VideoGallery',
            fields=[
                ('module_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='content.Module')),
                ('videos_per_row', models.IntegerField(default=3)),
            ],
            options={
                'verbose_name_plural': 'Video galleries',
            },
            bases=('content.module',),
        ),
        migrations.AlterField(
            model_name='module',
            name='type',
            field=models.CharField(choices=[('BLOCK', 'Block'), ('SPONSOR', 'Sponsorship'), ('IMAGEGALLERY', 'Image gallery'), ('VIDEOGALLERY', 'Video gallery')], max_length=12, null=True),
        ),
        migrations.AlterField(
            model_name='module',
            name='type',
            field=models.CharField(choices=[('BLOCK', 'Block'), ('SPONSORSHIP', 'Sponsorship'), ('IMAGEGALLERY', 'Image gallery'), ('VIDEOGALLERY', 'Video gallery')], max_length=12, null=True),
        ),
        migrations.RenameField(
            model_name='talk',
            old_name='end_time',
            new_name='end',
        ),
        migrations.AlterField(
            model_name='talk',
            name='end',
            field=models.DateTimeField(),
        ),
        migrations.RenameField(
            model_name='talk',
            old_name='start_time',
            new_name='start',
        ),
        migrations.AlterField(
            model_name='talk',
            name='start',
            field=models.DateTimeField(),
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('event', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='languages', to='events.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('event', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='events.Event')),
            ],
        ),
        migrations.AddField(
            model_name='talk',
            name='video',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='talk',
            name='language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Language'),
        ),
        migrations.AlterField(
            model_name='talk',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Room'),
        ),
        migrations.AddField(
            model_name='talk',
            name='slug',
            field=models.SlugField(null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='talk',
            name='content',
            field=tinymce.models.HTMLField(blank=True, max_length=65535),
        ),
        migrations.AlterModelOptions(
            name='talk',
            options={'ordering': ['order']},
        ),
        migrations.AddField(
            model_name='talk',
            name='order',
            field=models.PositiveIntegerField(default=0, verbose_name='Order'),
        ),
        migrations.AlterField(
            model_name='talk',
            name='content',
            field=tinymce.models.HTMLField(max_length=65535),
        ),
        migrations.AddField(
            model_name='module',
            name='event',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='events.Event'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='moduleinpage',
            name='event',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='moduleinpages', to='events.Event'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='talk',
            name='event',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='talks', to='events.Event'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='talk',
            name='slug',
            field=models.SlugField(null=True),
        ),
        migrations.AlterField(
            model_name='module',
            name='content_width',
            field=models.CharField(choices=[('WIDE', '█ Wide'), ('SEMIWIDE', '▌ Semi wide'), ('NARROW', '▎ Narrow')], default='WIDE', max_length=8),
        ),
        migrations.AlterField(
            model_name='module',
            name='image_position',
            field=models.CharField(choices=[('LEFT', '◧ Left'), ('RIGHT', '◨ Right')], default='LEFT', max_length=6),
        ),
        migrations.CreateModel(
            name='TalkInGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='talkingallerys', to='events.Event')),
                ('talk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='talks', to='content.Talk')),
                ('videogallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='talks', to='content.VideoGallery')),
            ],
            options={
                'verbose_name_plural': 'Talks in gallery',
                'ordering': ('order',),
            },
        ),
        migrations.AddField(
            model_name='module',
            name='public',
            field=models.BooleanField(default=True, help_text='If unchecked, only logged-in users can see this module'),
        ),
        # migrations.RunPython(
        #     code=content.migrations.0077_auto_20180219_0914.apply_migration,
        #     reverse_code=content.migrations.0077_auto_20180219_0914.revert_migration,
        # ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_events', models.ManyToManyField(related_name='users', to='events.Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
